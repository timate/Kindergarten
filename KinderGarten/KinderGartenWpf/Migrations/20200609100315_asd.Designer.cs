// <auto-generated />
using System;
using KinderGartenWpf.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KinderGartenWpf.Migrations
{
    [DbContext(typeof(KinderGartenDbContext))]
    [Migration("20200609100315_asd")]
    partial class asd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.Children", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Childrens");
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.ChildrenGroup", b =>
                {
                    b.Property<int>("ChildrenId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("ChildrenId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("ChildrenGroups");
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.ChildrenSubscription", b =>
                {
                    b.Property<int>("ChildrenId")
                        .HasColumnType("int");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasKey("ChildrenId", "SubscriptionId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("ChildrenSubscriptions");
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Information")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("Type")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = false
                        });
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<decimal>("HourSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)")
                        .HasMaxLength(8);

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("GroupId");

                    b.HasIndex("PersonId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HourSalary = 0m,
                            PersonId = 1,
                            RoleId = 1,
                            Salary = 0m,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<byte>("LessonNumber")
                        .HasColumnType("tinyint")
                        .HasMaxLength(1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<int?>("TariffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("GroupId");

                    b.HasIndex("RoomId");

                    b.HasIndex("TariffId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.Parent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChildrenId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChildrenId");

                    b.HasIndex("ParentRoleId");

                    b.HasIndex("PersonId");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.ParentRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ParentRoles");
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Middlename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDay = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedOn = new DateTime(2020, 6, 9, 13, 3, 14, 113, DateTimeKind.Local).AddTicks(8592),
                            Firstname = "admin",
                            Gender = false,
                            Lastname = "admin",
                            Middlename = "admin"
                        });
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Заведующий"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Старший воспитатель"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Воспитатель"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Педагог"
                        });
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.ScheduleTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("AfterDinnerTurnDuration")
                        .HasColumnType("tinyint");

                    b.Property<byte>("DinnerAfter")
                        .HasColumnType("tinyint");

                    b.Property<byte>("DinnerDuration")
                        .HasColumnType("tinyint");

                    b.Property<byte>("LessonDuration")
                        .HasColumnType("tinyint")
                        .HasMaxLength(2);

                    b.Property<byte>("TurnDuration")
                        .HasColumnType("tinyint");

                    b.Property<byte>("WorkingHourEnd")
                        .HasColumnType("tinyint");

                    b.Property<byte>("WorkingHourStart")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("ScheduleTimes");
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.SubscriptionTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasMaxLength(8);

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<int>("HoursCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateProcess")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Payment")
                        .HasColumnType("bit");

                    b.Property<int?>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<bool>("Type")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("PersonId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "admin",
                            PasswordHash = "AOznAEjHgzTx+vrR7lGyRPcVzDmfDVpGxCa3XfaCmO3qI7f/aSeTvr3tD2gEp1clxQ=="
                        });
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.Visit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChildrenId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LessonId")
                        .HasColumnType("int");

                    b.Property<byte>("Rating")
                        .HasColumnType("tinyint");

                    b.Property<int?>("VisitStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChildrenId");

                    b.HasIndex("LessonId");

                    b.HasIndex("VisitStatusId");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.VisitStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("VisitStatus");
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.Children", b =>
                {
                    b.HasOne("KinderGartenWpf.Models.Objects.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.ChildrenGroup", b =>
                {
                    b.HasOne("KinderGartenWpf.Models.Objects.Children", "Children")
                        .WithMany("ChildrenGroups")
                        .HasForeignKey("ChildrenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KinderGartenWpf.Models.Objects.Group", "Group")
                        .WithMany("ChildrenGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.ChildrenSubscription", b =>
                {
                    b.HasOne("KinderGartenWpf.Models.Objects.Children", "Children")
                        .WithMany("ChildrenSubscriptions")
                        .HasForeignKey("ChildrenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KinderGartenWpf.Models.Objects.SubscriptionTemplate", "Subscription")
                        .WithMany("ChildrenSubscriptions")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.Employee", b =>
                {
                    b.HasOne("KinderGartenWpf.Models.Objects.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId");

                    b.HasOne("KinderGartenWpf.Models.Objects.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("KinderGartenWpf.Models.Objects.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("KinderGartenWpf.Models.Objects.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleId");

                    b.HasOne("KinderGartenWpf.Models.Objects.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.Lesson", b =>
                {
                    b.HasOne("KinderGartenWpf.Models.Objects.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("KinderGartenWpf.Models.Objects.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("KinderGartenWpf.Models.Objects.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId");

                    b.HasOne("KinderGartenWpf.Models.Objects.SubscriptionTemplate", "Tariff")
                        .WithMany()
                        .HasForeignKey("TariffId");
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.Parent", b =>
                {
                    b.HasOne("KinderGartenWpf.Models.Objects.Children", "Children")
                        .WithMany("Parents")
                        .HasForeignKey("ChildrenId");

                    b.HasOne("KinderGartenWpf.Models.Objects.ParentRole", "ParentRole")
                        .WithMany()
                        .HasForeignKey("ParentRoleId");

                    b.HasOne("KinderGartenWpf.Models.Objects.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.SubscriptionTemplate", b =>
                {
                    b.HasOne("KinderGartenWpf.Models.Objects.Employee", "Employee")
                        .WithMany("Subscriptions")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.Transaction", b =>
                {
                    b.HasOne("KinderGartenWpf.Models.Objects.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId");

                    b.HasOne("KinderGartenWpf.Models.Objects.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("KinderGartenWpf.Models.Objects.Visit", b =>
                {
                    b.HasOne("KinderGartenWpf.Models.Objects.Children", "Children")
                        .WithMany()
                        .HasForeignKey("ChildrenId");

                    b.HasOne("KinderGartenWpf.Models.Objects.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId");

                    b.HasOne("KinderGartenWpf.Models.Objects.VisitStatus", "VisitStatus")
                        .WithMany()
                        .HasForeignKey("VisitStatusId");
                });
#pragma warning restore 612, 618
        }
    }
}
